<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter"
            xmlns:hl7="urn:hl7-org:v3" xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0"
            xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:ihe="urn:ihe:iti:xds-b:2007"
            xmlns:iheaudit="http://nhinc.services.com/schema/auditmessage" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2"
            xmlns:x12="http://www.caqh.org/SOAP/WSDL/CORERule2.2.0.xsd"
            xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon"
            xmlns:xacml="urn:oasis:names:tc:xacml:2.0:context:schema:os"
            xmlns:edxlde="urn:oasis:names:tc:emergency:EDXL:DE:1.0"
            xmlns:xcpd="urn:ihe:iti:xcpd:2009"
            targetNamespace="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter" elementFormDefault="qualified">
    <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" schemaLocation="NhincCommon.xsd"/>
    <xsd:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" schemaLocation="../../ebRS/query.xsd"/>
    <xsd:import namespace="urn:ihe:iti:xds-b:2007" schemaLocation="../../ihe/XDS.b_DocumentRepository.xsd"/>
    <xsd:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="../../ebRS/rs.xsd"/>
    <xsd:import namespace="http://nhinc.services.com/schema/auditmessage" schemaLocation="../../ihe/auditmessage.xsd"/>
    <xsd:import namespace="urn:oasis:names:tc:xacml:2.0:context:schema:os" schemaLocation="../../oasis/xacml/access_control-xacml-2.0-context-schema-os.xsd"/>
    <xsd:import namespace="urn:oasis:names:tc:emergency:EDXL:DE:1.0" schemaLocation="../../../schemas/ebRS/edxl-de.xsd"/>
    <xsd:import namespace="http://www.caqh.org/SOAP/WSDL/CORERule2.2.0.xsd" schemaLocation="../../../schemas/caqh/CORERule2.2.0.xsd"/>
    <xsd:import namespace="urn:ihe:iti:xcpd:2009" schemaLocation="../../HL7V3/NE2008/multicacheschemas/XCPD_PLQ.xsd"/>
    <!-- ====================================================================
    Document Query Schemas.
    ==================================================================== -->
    <xsd:complexType name="RespondingGateway_CrossGatewayQueryRequestType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryRequest"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayQueryRequest" type="tns:RespondingGateway_CrossGatewayQueryRequestType"/>
    <xsd:complexType name="RespondingGateway_CrossGatewayQueryResponseType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryResponse"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayQueryResponse" type="tns:RespondingGateway_CrossGatewayQueryResponseType"/>
    <xsd:complexType name="RespondingGateway_CrossGatewayQuerySecureRequestType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryRequest"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayQuerySecureRequest" type="tns:RespondingGateway_CrossGatewayQuerySecureRequestType"/>
    <xsd:complexType name="RespondingGateway_CrossGatewayQuerySecureResponseType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayQuerySecureResponse" type="tns:RespondingGateway_CrossGatewayQuerySecureResponseType"/>

    <xsd:complexType name="AdapterDocumentQueryDeferredRequestErrorType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element ref="query:AdhocQueryRequest"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterDocumentQueryDeferredRequestError" type="tns:AdapterDocumentQueryDeferredRequestErrorType"/>
    <xsd:complexType name="AdapterDocumentQueryDeferredRequestErrorSecuredType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryRequest"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterDocumentQueryDeferredRequestErrorSecured" type="tns:AdapterDocumentQueryDeferredRequestErrorSecuredType"/>
    <!-- ====================================================================
    Document Retrieve Schemas.
    ==================================================================== -->
    <xsd:complexType name="RespondingGateway_CrossGatewayRetrieveRequestType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetRequest"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayRetrieveRequest" type="tns:RespondingGateway_CrossGatewayRetrieveRequestType"/>
    <xsd:complexType name="RespondingGateway_CrossGatewayRetrieveSecuredRequestType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetRequest"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayRetrieveSecuredRequest" type="tns:RespondingGateway_CrossGatewayRetrieveSecuredRequestType"/>
    <xsd:complexType name="RespondingGateway_CrossGatewayRetrieveResponseType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetResponse"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayRetrieveResponse" type="tns:RespondingGateway_CrossGatewayRetrieveResponseType"/>
    <xsd:complexType name="RespondingGateway_CrossGatewayRetrieveSecuredResponseType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayRetrieveSecuredResponse" type="tns:RespondingGateway_CrossGatewayRetrieveSecuredResponseType"/>
    <!-- ====================================================================
    Document ProvideAndRegister Schemas.
    ==================================================================== -->
    <xsd:complexType name="RespondingGateway_CrossGatewayProvideAndRegisterDocumentSetRequestRequestType">
        <xsd:sequence>
            <xsd:element ref="ihe:ProvideAndRegisterDocumentSetRequest"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayProvideAndRegisterDocumentSetRequestRequest" type="tns:RespondingGateway_CrossGatewayProvideAndRegisterDocumentSetRequestRequestType"/>
    <xsd:complexType name="RespondingGateway_CrossGatewayProvideAndRegisterDocumentSetRequestResponseType">
        <xsd:sequence>
            <xsd:element ref="rs:RegistryResponse"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="url" type="nccommon:UrlInfoType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayProvideAndRegisterDocumentSetRequestResponse" type="tns:RespondingGateway_CrossGatewayProvideAndRegisterDocumentSetRequestResponseType"/>
    <!-- ====================================================================
    Document Register Schemas.
    ==================================================================== -->
    <xsd:complexType name="RespondingGateway_CrossGatewayRegisterDocumentSetRequestType">
        <xsd:sequence>
            <xsd:element ref="ihe:RegisterDocumentSetRequest"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_CrossGatewayRegisterDocumentSetRequest" type="tns:RespondingGateway_CrossGatewayRegisterDocumentSetRequestType"/>

    <!-- ====================================================================
    Audit Log Schemas.
    FindAuditEventsRequestType and FindCommunitiesAndAuditEventsType are
    duplicates intentially. Have the same datatypes for two different methods
    in the WSDL is not supported.
    ==================================================================== -->
    <xsd:complexType name="FindAuditEventsRequestType">
        <xsd:sequence>
            <xsd:element ref="iheaudit:FindAuditEvents"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FindAuditEventsRequest" type="tns:FindAuditEventsRequestType"/>
    <xsd:complexType name="FindCommunitiesAndAuditEventsResponseType">
        <xsd:sequence>
            <xsd:element name="communities" type="xsd:string" maxOccurs="unbounded"/>
            <xsd:element name="findAuditEventResponse" type="iheaudit:FindAuditEventsResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FindCommunitiesAndAuditEventsResponse" type="tns:FindCommunitiesAndAuditEventsResponseType"/>
    <xsd:complexType name="FindCommunitiesAndAuditEventsRequestType">
        <xsd:sequence>
            <xsd:element ref="iheaudit:FindAuditEvents"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FindCommunitiesAndAuditEventsRequest" type="tns:FindCommunitiesAndAuditEventsRequestType"/>
    <!-- ====================================================================
    Policy Engine
    ==================================================================== -->
    <xsd:complexType name="CheckPolicyRequestSecuredType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyRequestSecured" type="tns:CheckPolicyRequestSecuredType"/>
    <xsd:complexType name="CheckPolicyRequestType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyRequest" type="tns:CheckPolicyRequestType"/>
    <xsd:complexType name="CheckPolicyResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyResponse" type="tns:CheckPolicyResponseType"/>
    <xsd:complexType name="CheckPolicyPatientOptInRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyPatientOptInRequest" type="tns:CheckPolicyPatientOptInRequestType"/>
    <xsd:complexType name="CheckPolicyPatientOptInResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyPatientOptInResponse" type="tns:CheckPolicyPatientOptInResponseType"/>
    <xsd:complexType name="CheckPolicySubjDiscInRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscInRequest" type="tns:CheckPolicySubjDiscInRequestType"/>
    <xsd:complexType name="CheckPolicySubjDiscInResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscInResponse" type="tns:CheckPolicySubjDiscInResponseType"/>
    <xsd:complexType name="CheckPolicySubjDiscOutRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscOutRequest" type="tns:CheckPolicySubjDiscOutRequestType"/>
    <xsd:complexType name="CheckPolicySubjDiscOutResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscOutResponse" type="tns:CheckPolicySubjDiscOutResponseType"/>
    <xsd:complexType name="CheckPolicySubjDiscRevokeInRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscRevokeInRequest" type="tns:CheckPolicySubjDiscRevokeInRequestType"/>
    <xsd:complexType name="CheckPolicySubjDiscRevokeInResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscRevokeInResponse" type="tns:CheckPolicySubjDiscRevokeInResponseType"/>
    <xsd:complexType name="CheckPolicySubjDiscRevokeOutRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscRevokeOutRequest" type="tns:CheckPolicySubjDiscRevokeOutRequestType"/>
    <xsd:complexType name="CheckPolicySubjDiscRevokeOutResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscRevokeOutResponse" type="tns:CheckPolicySubjDiscRevokeOutResponseType"/>
    <xsd:complexType name="CheckPolicyDocQueryInRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocQueryInRequest" type="tns:CheckPolicyDocQueryInRequestType"/>
    <xsd:complexType name="CheckPolicyDocQueryInResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocQueryInResponse" type="tns:CheckPolicyDocQueryInResponseType"/>
    <xsd:complexType name="CheckPolicyDocQueryOutRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocQueryOutRequest" type="tns:CheckPolicyDocQueryOutRequestType"/>
    <xsd:complexType name="CheckPolicyDocQueryOutResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocQueryOutResponse" type="tns:CheckPolicyDocQueryOutResponseType"/>
    <xsd:complexType name="CheckPolicyDocRetrieveInRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocRetrieveInRequest" type="tns:CheckPolicyDocRetrieveInRequestType"/>
    <xsd:complexType name="CheckPolicyDocRetrieveInResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocRetrieveInResponse" type="tns:CheckPolicyDocRetrieveInResponseType"/>
    <xsd:complexType name="CheckPolicyDocRetrieveOutRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocRetrieveOutRequest" type="tns:CheckPolicyDocRetrieveOutRequestType"/>
    <xsd:complexType name="CheckPolicyDocRetrieveOutResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocRetrieveOutResponse" type="tns:CheckPolicyDocRetrieveOutResponseType"/>
    <xsd:complexType name="CheckPolicyAuditLogQueryInRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyAuditLogQueryInRequest" type="tns:CheckPolicyAuditLogQueryInRequestType"/>
    <xsd:complexType name="CheckPolicyAuditLogQueryInResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyAuditLogQueryInResponse" type="tns:CheckPolicyAuditLogQueryInResponseType"/>
    <xsd:complexType name="CheckPolicyAuditLogQueryOutRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyAuditLogQueryOutRequest" type="tns:CheckPolicyAuditLogQueryOutRequestType"/>
    <xsd:complexType name="CheckPolicyAuditLogQueryOutResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyAuditLogQueryOutResponse" type="tns:CheckPolicyAuditLogQueryOutResponseType"/>
    <xsd:complexType name="CheckPolicyBasedPatientIdExistenceResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyBasedPatientIdExistenceResponse" type="tns:CheckPolicyBasedPatientIdExistenceResponseType"/>
    <xsd:complexType name="TransformXACMLRequestToCppAQRRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformXACMLRequestToCppAQRRequest" type="tns:TransformXACMLRequestToCppAQRRequestType"/>
    <xsd:complexType name="TransformXACMLRequestToCppAQRResponseType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryRequest"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformXACMLRequestToCppAQRResponse" type="tns:TransformXACMLRequestToCppAQRResponseType"/>
    <xsd:complexType name="TransformAQRToCppRDSRRequestType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformAQRToCppRDSRRequest" type="tns:TransformAQRToCppRDSRRequestType"/>
    <xsd:complexType name="TransformAQRToCppRDSRResponseType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetRequest"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformAQRToCppRDSRResponse" type="tns:TransformAQRToCppRDSRResponseType"/>
    <xsd:complexType name="CheckPatientOptInRequestType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPatientOptInRequest" type="tns:CheckPatientOptInRequestType"/>
    <xsd:complexType name="CheckPatientOptInResponseType">
        <xsd:sequence>
            <xsd:element name="patientOptedIn" type="xsd:boolean"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPatientOptInResponse" type="tns:CheckPatientOptInResponseType"/>
    <xsd:complexType name="TransformXACMLRequestToAQRForPatientIdRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformXACMLRequestToAQRForPatientIdRequest" type="tns:TransformXACMLRequestToAQRForPatientIdRequestType"/>
    <xsd:complexType name="TransformXACMLRequestToAQRForPatientIdResponseType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryRequest"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformXACMLRequestToAQRForPatientIdResponse" type="tns:TransformXACMLRequestToAQRForPatientIdResponseType"/>
    <xsd:complexType name="TransformPatientIdAQRToCppXACMLRequestType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryResponse"/>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformPatientIdAQRToCppXACMLRequest" type="tns:TransformPatientIdAQRToCppXACMLRequestType"/>
    <xsd:complexType name="TransformPatientIdAQRToCppXACMLResponseType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="TransformPatientIdAQRToCppXACMLResponse" type="tns:TransformPatientIdAQRToCppXACMLResponseType"/>
    <xsd:complexType name="CheckPolicyDocRetrieveRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocRetrieveRequest" type="tns:CheckPolicyDocRetrieveRequestType"/>
    <xsd:complexType name="CheckPolicyDocRetrieveResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicyDocRetrieveResponse" type="tns:CheckPolicyDocRetrieveResponseType"/>
    <xsd:complexType name="CheckPolicySubjDiscReIdentRequestType">
        <xsd:sequence>
            <xsd:element name="request" type="xacml:RequestType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscReIdentRequest" type="tns:CheckPolicySubjDiscReIdentRequestType"/>
    <xsd:complexType name="CheckPolicySubjDiscReIdentResponseType">
        <xsd:sequence>
            <xsd:element name="response" type="xacml:ResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="CheckPolicySubjDiscReIdentResponse" type="tns:CheckPolicySubjDiscReIdentResponseType"/>
    <xsd:simpleType name="UserIdFormatType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="none"/>
            <xsd:enumeration value="email"/>
            <xsd:enumeration value="X500"/>
        </xsd:restriction>
    </xsd:simpleType>
    <!--
    This type will be used to to represent the patients preferences.  As new preference
    options are added, they should be reflected in this type.  These types are used by
    the Policy Engine PIP (Policy Information Point) -->
    <xsd:complexType name="FineGrainedPolicyCriterionType">
        <xsd:sequence>
            <xsd:element name="sequentialId" type="xsd:string"/>
            <xsd:element name="policyOID" type="xsd:string" minOccurs="0"/>
            <xsd:element name="permit" type="xsd:boolean"/>
            <xsd:element name="documentTypeCode" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="userRole" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="purposeOfUse" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="confidentialityCode" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="action" type="xsd:string" minOccurs="0"/>
            <xsd:element name="organizationId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="homeCommunityId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="uniqueDocumentId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="ruleStartDate" type="xsd:string" minOccurs="0"/>
            <xsd:element name="ruleEndDate" type="xsd:string" minOccurs="0"/>
            <xsd:element name="userId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="userIdFormat" type="tns:UserIdFormatType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FineGrainedPolicyCriterion" type="tns:FineGrainedPolicyCriterionType"/>
    <xsd:complexType name="FineGrainedPolicyCriteriaType">
        <xsd:sequence>
            <xsd:element name="fineGrainedPolicyCriterion" type="tns:FineGrainedPolicyCriterionType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FineGrainedPolicyCriteria" type="tns:FineGrainedPolicyCriteriaType"/>
    <xsd:simpleType name="BinaryDocumentStoreActionType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="none"/>
            <xsd:enumeration value="update"/>
            <xsd:enumeration value="delete"/>
            <xsd:enumeration value="add"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:complexType name="PolicyPatientInfoType">
        <xsd:sequence>
            <xsd:element name="name" type="nccommon:PersonNameType" minOccurs="0"/>
            <xsd:element name="addr" type="nccommon:AddressesType" minOccurs="0"/>
            <xsd:element name="gender" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="birthTime" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="PolicyPatientInfo" type="tns:PolicyPatientInfoType"/>
    <xsd:complexType name="PolicyOriginalAuthorInfoType">
        <xsd:sequence>
            <xsd:element name="authorTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorIdAssigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="name" type="nccommon:PersonNameType" minOccurs="0"/>
            <xsd:element name="representedOrganizationIdAssigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="representedOrganizationId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="representedOrganizationName" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="PolicyOriginalAuthorInfo" type="tns:PolicyOriginalAuthorInfoType"/>
    <xsd:complexType name="PolicyScannerAuthorInfoType">
        <xsd:sequence>
            <xsd:element name="authorTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorIdAssigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authoringDevice" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="deviceManufactureModelName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="deviceSoftwareName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="representedOrganizationIdAssigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="representedOrganizationName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="representedOrganizationAddress" type="nccommon:AddressType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="PolicyScannerAuthorInfo" type="tns:PolicyScannerAuthorInfoType"/>
    <xsd:complexType name="PolicyDataEntererInfoType">
        <xsd:sequence>
            <xsd:element name="dataEntererTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="dataEntererIdAssigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="dataEntererId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="name" type="nccommon:PersonNameType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="PolicyDataEntererInfo" type="tns:PolicyDataEntererInfoType"/>
    <xsd:complexType name="PolicyCustodianInfoType">
        <xsd:sequence>
            <xsd:element name="organizationIdAssigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="organizationId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="organizationName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="organizationAddress" type="nccommon:AddressType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="PolicyCustodianInfo" type="tns:PolicyCustodianInfoType"/>
    <xsd:complexType name="PolicyLegalAuthenticatorType">
        <xsd:sequence>
            <xsd:element name="authenticationTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authenticatorIdAssigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authenticatorId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="signatureCode" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="authenticatorPersonName" type="nccommon:PersonNameType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="PolicyLegalAuthenticator" type="tns:PolicyLegalAuthenticatorType"/>
    <!--
    This type will be used to to represent the patients binary documents (PDF) preferences.  As new preference
    options are added, they should be reflected in this type.  These types are used by
    the Policy Engine PIP (Policy Information Point) -->
    <xsd:complexType name="BinaryDocumentPolicyCriterionType">
        <xsd:sequence>
            <xsd:element name="policyOID" type="xsd:string" minOccurs="0"/>
            <xsd:element name="documentUniqueId" type="xsd:string"/>
            <xsd:element name="documentTypeCode" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="documentTitle" type="xsd:string"/>
            <xsd:element name="effectiveTime" type="xsd:string"/>
            <xsd:element name="confidentialityCode" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="patientInfo" type="tns:PolicyPatientInfoType" minOccurs="0"/>
            <xsd:element name="authorOriginal" type="tns:PolicyOriginalAuthorInfoType" minOccurs="0"/>
            <xsd:element name="authorScanner" type="tns:PolicyScannerAuthorInfoType" minOccurs="0"/>
            <xsd:element name="dataEnterer" type="tns:PolicyDataEntererInfoType" minOccurs="0"/>
            <xsd:element name="custodian" type="tns:PolicyCustodianInfoType" minOccurs="0"/>
            <xsd:element name="legalAuthenticator" type="tns:PolicyLegalAuthenticatorType" minOccurs="0"/>
            <xsd:element name="startDate" type="xsd:string" minOccurs="0"/>
            <xsd:element name="endDate" type="xsd:string" minOccurs="0"/>
            <xsd:element name="mimeType" type="xsd:string" minOccurs="0"/>
            <xsd:element name="binaryDocument" type="xsd:base64Binary"/>
            <xsd:element name="healthcareFacilityTypeCode" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="intendedRecipient" type="xsd:string" minOccurs="0"/>
            <xsd:element name="practiceSettingCode" type="nccommon:CeType" minOccurs="0"/>
            <xsd:element name="storeAction" type="tns:BinaryDocumentStoreActionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="BinaryDocumentPolicyCriterion" type="tns:BinaryDocumentPolicyCriterionType"/>
    <xsd:complexType name="BinaryDocumentPolicyCriteriaType">
        <xsd:sequence>
            <xsd:element name="binaryDocumentPolicyCriterion" type="tns:BinaryDocumentPolicyCriterionType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="BinaryDocumentPolicyCriteria" type="tns:BinaryDocumentPolicyCriteriaType"/>
    <xsd:complexType name="PatientPreferencesType">
        <xsd:sequence>
            <xsd:element name="patientId" type="xsd:string"/>
            <xsd:element name="assigningAuthority" type="xsd:string" minOccurs="0"/>
            <xsd:element name="optIn" type="xsd:boolean"/>
            <xsd:element name="fineGrainedPolicyCriteria" type="tns:FineGrainedPolicyCriteriaType" minOccurs="0"/>
            <xsd:element name="binaryDocumentPolicyCriteria" type="tns:BinaryDocumentPolicyCriteriaType" minOccurs="0"/>
            <xsd:element name="fineGrainedPolicyMetadata" type="tns:FineGrainedPolicyMetadataType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="PatientPreferences" type="tns:PatientPreferencesType"/>
    <xsd:complexType name="RetrievePtConsentByPtIdRequestType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType" minOccurs="0"/>
            <xsd:element name="patientId" type="xsd:string"/>
            <xsd:element name="assigningAuthority" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RetrievePtConsentByPtIdRequest" type="tns:RetrievePtConsentByPtIdRequestType"/>
    <xsd:complexType name="RetrievePtConsentByPtIdResponseType">
        <xsd:sequence>
            <xsd:element name="patientPreferences" type="tns:PatientPreferencesType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RetrievePtConsentByPtIdResponse" type="tns:RetrievePtConsentByPtIdResponseType"/>
    <xsd:complexType name="RetrievePtConsentByPtDocIdRequestType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType" minOccurs="0"/>
            <xsd:element name="documentId" type="xsd:string"/>
            <xsd:element name="repositoryId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="homeCommunityId" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RetrievePtConsentByPtDocIdRequest" type="tns:RetrievePtConsentByPtDocIdRequestType"/>
    <xsd:complexType name="RetrievePtConsentByPtDocIdResponseType">
        <xsd:sequence>
            <xsd:element name="patientPreferences" type="tns:PatientPreferencesType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RetrievePtConsentByPtDocIdResponse" type="tns:RetrievePtConsentByPtDocIdResponseType"/>
    <xsd:complexType name="StorePtConsentRequestType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType" minOccurs="0"/>
            <xsd:element name="patientPreferences" type="tns:PatientPreferencesType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="StorePtConsentRequest" type="tns:StorePtConsentRequestType"/>
    <xsd:complexType name="StorePtConsentResponseType">
        <xsd:sequence>
            <xsd:element name="status" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="StorePtConsentResponse" type="tns:StorePtConsentResponseType"/>
    <!-- ====================================================================
    Authentication
    ==================================================================== -->
    <xsd:complexType name="AuthenticateUserRequestType">
        <xsd:sequence>
            <xsd:element name="userName" type="xsd:string"/>
            <xsd:element name="password" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AuthenticateUserRequest" type="tns:AuthenticateUserRequestType"/>
    <xsd:complexType name="AuthenticateUserResponseType">
        <xsd:sequence>
            <xsd:element name="isAuthenticationAvailable" type="xsd:boolean"/>
            <xsd:element name="authenticationToken" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AuthenticateUserResponse" type="tns:AuthenticateUserResponseType"/>
    <xsd:complexType name="FineGrainedPolicyMetadataType">
        <xsd:sequence>
            <xsd:element name="policyOID" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorPerson" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorInstitution" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorRole" type="xsd:string" minOccurs="0"/>
            <xsd:element name="authorSpecialty" type="xsd:string" minOccurs="0"/>
            <xsd:element name="availabilityStatus" type="xsd:string" minOccurs="0"/>
            <xsd:element name="classCode" type="xsd:string" minOccurs="0"/>
            <xsd:element name="classCodeScheme" type="xsd:string" minOccurs="0"/>
            <xsd:element name="classCodeDisplayName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="comments" type="xsd:string" minOccurs="0"/>
            <xsd:element name="confidentialityCode" type="xsd:string" minOccurs="0"/>
            <xsd:element name="confidentialityCodeScheme" type="xsd:string" minOccurs="0"/>
            <xsd:element name="confidentialityCodeDisplayName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="creationTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="formatCode" type="xsd:string" minOccurs="0"/>
            <xsd:element name="formatCodeScheme" type="xsd:string" minOccurs="0"/>
            <xsd:element name="formatCodeDisplayName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="hash" type="xsd:string" minOccurs="0"/>
            <xsd:element name="healthcareFacilityCode" type="xsd:string" minOccurs="0"/>
            <xsd:element name="healthcareFacilityCodeScheme" type="xsd:string" minOccurs="0"/>
            <xsd:element name="healthcareFacilityCodeDisplayName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="languageCode" type="xsd:string" minOccurs="0"/>
            <xsd:element name="legalAuthenticator" type="xsd:string" minOccurs="0"/>
            <xsd:element name="mimeType" type="xsd:string" minOccurs="0"/>
            <xsd:element name="practiceSettingCode" type="xsd:string" minOccurs="0"/>
            <xsd:element name="practiceSettingCodeScheme" type="xsd:string" minOccurs="0"/>
            <xsd:element name="practiceSettingCodeDisplayName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="serviceStartTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="serviceStopTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="size" type="xsd:string" minOccurs="0"/>
            <xsd:element name="sourcePatientId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="Pid3" type="xsd:string" minOccurs="0"/>
            <xsd:element name="Pid5" type="xsd:string" minOccurs="0"/>
            <xsd:element name="Pid7" type="xsd:string" minOccurs="0"/>
            <xsd:element name="Pid8" type="xsd:string" minOccurs="0"/>
            <xsd:element name="Pid11" type="xsd:string" minOccurs="0"/>
            <xsd:element name="documentTitle" type="xsd:string" minOccurs="0"/>
            <xsd:element name="typeCode" type="xsd:string" minOccurs="0"/>
            <xsd:element name="typeCodeScheme" type="xsd:string" minOccurs="0"/>
            <xsd:element name="typeCodeDisplayName" type="xsd:string" minOccurs="0"/>
            <xsd:element name="documentUniqueId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="documentURI" type="xsd:string" minOccurs="0"/>
            <xsd:element name="eventCodes" type="nccommon:CeType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    <!-- ====================================================================
    Document Submission Schemas
    ==================================================================== -->
    <xsd:complexType name="Adapter_ProvideAndRegisterDocumentSetRequestType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="ProvideAndRegisterDocumentSetRequest" type="ihe:ProvideAndRegisterDocumentSetRequestType"/>
            <xsd:element name="url" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_ProvideAndRegisterDocumentSetRequest" type="tns:Adapter_ProvideAndRegisterDocumentSetRequestType"/>
    <xsd:complexType name="Adapter_ProvideAndRegisterDocumentSetSecuredRequestType">
        <xsd:sequence>
            <xsd:element name="ProvideAndRegisterDocumentSetRequest" type="ihe:ProvideAndRegisterDocumentSetRequestType"/>
            <xsd:element name="url" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_ProvideAndRegisterDocumentSetSecuredRequest" type="tns:Adapter_ProvideAndRegisterDocumentSetSecuredRequestType"/>
    <xsd:complexType name="AdapterRegistryResponseType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="RegistryResponse" type="rs:RegistryResponseType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterRegistryResponse" type="tns:AdapterRegistryResponseType"/>
    <xsd:complexType name="Adapter_ProvideAndRegisterDocumentSetRequestErrorType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="ProvideAndRegisterDocumentSetRequest" type="ihe:ProvideAndRegisterDocumentSetRequestType"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_ProvideAndRegisterDocumentSetRequestError" type="tns:Adapter_ProvideAndRegisterDocumentSetRequestErrorType"/>
    <xsd:complexType name="Adapter_ProvideAndRegisterDocumentSetRequestErrorSecuredType">
        <xsd:sequence>
            <xsd:element name="ProvideAndRegisterDocumentSetRequest" type="ihe:ProvideAndRegisterDocumentSetRequestType"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_ProvideAndRegisterDocumentSetRequestErrorSecured" type="tns:Adapter_ProvideAndRegisterDocumentSetRequestErrorSecuredType"/>
    <!-- ====================================================================
    Document Data Submission Schemas
    ==================================================================== -->
    <xsd:complexType name="Adapter_RegisterDocumentSetRequestType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="RegisterDocumentSetRequest" type="ihe:RegisterDocumentSetRequestType"/>
            <xsd:element name="url" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_RegisterDocumentSetRequest" type="tns:Adapter_RegisterDocumentSetRequestType"/>
    <xsd:complexType name="Adapter_RegisterDocumentSetSecuredRequestType">
        <xsd:sequence>
            <xsd:element name="RegisterDocumentSetRequest" type="ihe:RegisterDocumentSetRequestType"/>
            <xsd:element name="url" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_RegisterDocumentSetSecuredRequest" type="tns:Adapter_RegisterDocumentSetSecuredRequestType"/>
    <xsd:complexType name="Adapter_RegisterDocumentSetRequestErrorType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="RegisterDocumentSetRequest" type="ihe:RegisterDocumentSetRequestType"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_RegisterDocumentSetRequestError" type="tns:Adapter_RegisterDocumentSetRequestErrorType"/>
    <xsd:complexType name="Adapter_RegisterDocumentSetRequestErrorSecuredType">
        <xsd:sequence>
            <xsd:element name="RegisterDocumentSetRequest" type="ihe:RegisterDocumentSetRequestType"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="Adapter_RegisterDocumentSetRequestErrorSecured" type="tns:Adapter_RegisterDocumentSetRequestErrorSecuredType"/>
    <!-- ====================================================================
    Redaction
    ==================================================================== -->
    <xsd:complexType name="FilterDocQueryResultsRequestType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryRequest"/>
            <xsd:element ref="query:AdhocQueryResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FilterDocQueryResultsRequest" type="tns:FilterDocQueryResultsRequestType"/>
    <xsd:complexType name="FilterDocQueryResultsResponseType">
        <xsd:sequence>
            <xsd:element ref="query:AdhocQueryResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FilterDocQueryResultsResponse" type="tns:FilterDocQueryResultsResponseType"/>
    <xsd:complexType name="FilterDocRetrieveResultsRequestType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetRequest"/>
            <xsd:element ref="ihe:RetrieveDocumentSetResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FilterDocRetrieveResultsRequest" type="tns:FilterDocRetrieveResultsRequestType"/>
    <xsd:complexType name="FilterDocRetrieveResultsResponseType">
        <xsd:sequence>
            <xsd:element ref="ihe:RetrieveDocumentSetResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="FilterDocRetrieveResultsResponse" type="tns:FilterDocRetrieveResultsResponseType"/>
    <!-- ====================================================================
    Document retrieve Deferred Schemas for Error handling
    ==================================================================== -->
    <xsd:complexType name="AdapterDocumentRetrieveDeferredRequestErrorType">
        <xsd:sequence>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
            <xsd:element name="RetrieveDocumentSetRequest" type="ihe:RetrieveDocumentSetRequestType"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterDocumentRetrieveDeferredRequestError" type="tns:AdapterDocumentRetrieveDeferredRequestErrorType"/>
    <xsd:complexType name="AdapterDocumentRetrieveDeferredRequestErrorSecuredType">
        <xsd:sequence>
            <xsd:element name="RetrieveDocumentSetRequest" type="ihe:RetrieveDocumentSetRequestType"/>
            <xsd:element name="errorMsg" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterDocumentRetrieveDeferredRequestErrorSecured" type="tns:AdapterDocumentRetrieveDeferredRequestErrorSecuredType"/>
    <xsd:complexType name="RespondingGateway_SendAlertMessageType">
        <xsd:sequence>
            <xsd:element ref="edxlde:EDXLDistribution"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_SendAlertMessage" type="tns:RespondingGateway_SendAlertMessageType"/>
    <xsd:complexType name="RespondingGateway_SendAlertMessageSecuredType">
        <xsd:sequence>
            <xsd:element ref="edxlde:EDXLDistribution"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="RespondingGateway_SendAlertMessageSecured" type="tns:RespondingGateway_SendAlertMessageSecuredType"/>

    <!-- ====================================================================
    X12 Document Submission RealTime / Sync Service Schemas.
    ==================================================================== -->
    <xsd:complexType name="AdapterCOREEnvelopeRealTimeRequestType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeRealTimeRequest"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterCOREEnvelopeRealTimeRequest" type="tns:AdapterCOREEnvelopeRealTimeRequestType"/>

    <xsd:complexType name="AdapterCOREEnvelopeRealTimeResponseType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeRealTimeResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterCOREEnvelopeRealTimeResponse" type="tns:AdapterCOREEnvelopeRealTimeResponseType"/>

    <xsd:complexType name="AdapterCOREEnvelopeRealTimeSecuredRequestType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeRealTimeRequest"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterCOREEnvelopeRealTimeSecuredRequest" type="tns:AdapterCOREEnvelopeRealTimeSecuredRequestType"/>

    <!-- ====================================================================
    X12 Document Submission Batch / Async / Deferred Service Schemas.
    ==================================================================== -->
    <xsd:complexType name="AdapterBatchSubmissionRequestType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeBatchSubmission"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterBatchSubmissionRequest" type="tns:AdapterBatchSubmissionRequestType"/>

    <xsd:complexType name="AdapterBatchSubmissionResponseType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeBatchSubmissionResponse"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterBatchSubmissionResponse" type="tns:AdapterBatchSubmissionResponseType"/>

    <xsd:complexType name="AdapterBatchSubmissionResponseSecuredType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeBatchSubmissionResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterBatchSubmissionResponseSecured" type="tns:AdapterBatchSubmissionResponseSecuredType"/>

    <xsd:complexType name="AdapterBatchSubmissionSecuredRequestType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeBatchSubmission"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterBatchSubmissionSecuredRequest" type="tns:AdapterBatchSubmissionSecuredRequestType"/>

    <xsd:complexType name="AdapterBatchSubmissionAckResponseType">
        <xsd:sequence>
            <xsd:element ref="x12:COREEnvelopeBatchSubmissionAckRetrievalResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterBatchSubmissionAckResponse" type="tns:AdapterBatchSubmissionAckResponseType"/>

    <!-- ==================================================================
    Patient Location Query adapter messges
    ==================================================================== -->
    <xsd:complexType name="AdapterPatientLocationQueryRequestType">
        <xsd:sequence>
            <xsd:element ref="xcpd:PatientLocationQueryRequest"/>
            <xsd:element name="assertion" type="nccommon:AssertionType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterPatientLocationQueryRequest" type="tns:AdapterPatientLocationQueryRequestType"/>
    <xsd:complexType name="AdapterPatientLocationQueryResponseType">
        <xsd:sequence>
            <xsd:element ref="xcpd:PatientLocationQueryResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterPatientLocationQueryResponse" type="tns:AdapterPatientLocationQueryResponseType"/>

    <xsd:complexType name="AdapterPatientLocationQuerySecuredRequestType">
        <xsd:sequence>
            <xsd:element ref="xcpd:PatientLocationQueryRequest"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterPatientLocationQuerySecuredRequest" type="tns:AdapterPatientLocationQuerySecuredRequestType"/>
    <xsd:complexType name="AdapterPatientLocationQuerySecuredResponseType">
        <xsd:sequence>
            <xsd:element ref="xcpd:PatientLocationQueryResponse"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="AdapterPatientLocationQuerySecuredResponse" type="tns:AdapterPatientLocationQuerySecuredResponseType"/>
</xsd:schema>
