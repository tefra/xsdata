{% set level = level|default(0) -%}
{% set help | format_docstring(level + 1) %}
    {%- include "docstrings." + docstring_style + ".jinja2" -%}
{% endset -%}
{% set parent_namespace = obj.namespace if obj.namespace is not none else parent_namespace|default(None) -%}
{% set parents = parents|default([obj.name]) -%}
{% set class_name =  obj.name|class_name -%}
{% set local_name =  obj.meta_name or obj.name -%}
{% set local_name = None if class_name == local_name or parents|length != 1 else local_name -%}
{% set base_classes = obj.extensions|map(attribute='type')|map('type_name')|join(', ') -%}
{% set target_namespace = obj.target_namespace if level == 0 and module_namespace != obj.target_namespace else None %}

@dataclass
class {{ class_name }}{{"({})".format(base_classes) if base_classes }}:
{%- if help %}
{{ help|indent(4, first=True) }}
{%- endif -%}
{%- if local_name or obj.is_nillable or obj.namespace is not none or target_namespace %}
    class Meta:
        {%- if local_name %}
        name = "{{ local_name }}"
        {%- endif -%}
        {%- if obj.is_nillable %}
        nillable = True
        {%- endif -%}
        {%- if obj.namespace is not none %}
        namespace = "{{ obj.namespace }}"
        {%- endif %}
        {%- if target_namespace and target_namespace != obj.namespace %}
        target_namespace = "{{ target_namespace }}"
        {%- endif %}
{% elif obj.attrs|length == 0 and not help %}
    pass
{%- endif -%}
{%- for attr in obj.attrs %}
    {%- set metadata = attr|field_metadata(parent_namespace, parents) %}
    {%- set default_property = "default_factory" if attr.is_factory else "default" %}
    {{ attr.name|field_name(obj.name) }}: {{ attr|field_type(parents) }} = field(
        {% if attr.fixed -%}
        init=False,
        {% endif -%}
        {{ default_property }}={{ attr|field_default(obj.ns_map) }},
        {%- if metadata %}
        metadata={{ metadata|format_metadata(8) }}
        {%- endif %}
    )
{%- endfor -%}
{%- for inner in obj.inner %}
    {%- set tpl = "enum.jinja2" if inner.is_enumeration else "class.jinja2" -%}
    {%- set inner_parents = parents + [inner.name] -%}
    {%- filter indent(4) -%}
        {%- with obj=inner, parents=inner_parents, level=(level + 1) -%}
            {% include tpl %}
        {%- endwith -%}
    {%- endfilter -%}
{%- endfor -%}
