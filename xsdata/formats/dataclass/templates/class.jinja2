{% set help = obj|docstring|trim -%}
{% set level = level|default(0)-%}
{% set namespace = obj.namespace or namespace|default(None) %}

@dataclass
class {{ obj.name }}{{"({})".format(obj.extensions|join(', ', attribute="name")) if obj.extensions }}:
{%- if help %}
{{ help|indent(4, first=True) }}
{%- endif -%}
{%- if obj.attrs|length == 0 and level > 0 %}
    pass
{%- endif -%}
{%- if level == 0 and (obj.local_name != obj.name or obj.namespace) %}
    class Meta:
        {%- if obj.local_name != obj.name %}
        name = "{{ obj.local_name }}"
        {%- endif -%}
        {%- if obj.namespace %}
        namespace = "{{ obj.namespace }}"
        {%- endif %}
{% endif -%}
{%- for attr in obj.attrs %}
    {%- set field_params = dict(
                  name=attr.local_name,
                  type=attr.local_type,
                  namespace=attr.namespace if namespace != attr.namespace else None,
                  ** attr.restrictions
            )
    %}
    {{ attr.name }}: {{ attr.type }} = field(
        {{ "default_factory" if attr.is_list else "default" }}={{ attr.default }},
        metadata=dict(
            {{ field_params|arguments|indent(12) }}
        )
    )
{%- endfor -%}
{%- for inner in obj.inner %}
    {%- filter indent(4) -%}
        {%- with obj=inner, namespace=obj.namespace or namespace, level=level + 1 -%}
            {% include "class.jinja2" %}
        {%- endwith -%}
    {%- endfilter -%}
{%- endfor -%}
